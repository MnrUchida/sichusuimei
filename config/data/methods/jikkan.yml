taikyoku_kijin:
  name: 大極貴人
  parts:
    1:
      type: angle
      default_method: AngleValue.new.with_shi(-gogyo.pos_x + 2 * gogyo.pos_y + 1).mod_shi(6)
      method:
       - define: AngleValue.new.with_shi(4)
         target:
          - tsuchinoe
          - tsuchinoto
    2:
      type: angle
      default_method: AngleValue.new.with_shi(8.5 - 2.5 * gogyo.pos_x + 0.5 * gogyo.pos_y)
      method:
       - define: AngleValue.new.with_shi(7)
         target:
          - tsuchinoe
          - tsuchinoto
    3:
      type: method
      default_method: nil
      method:
       - define: Junishi.by_angle(AngleValue.new.with_shi(10).revise)
         target:
          - tsuchinoe
          - tsuchinoto
      _?:
        type: method
        default_method: true
        method:
         - define: target == self.taikyoku_kijin_3
           target:
            - tsuchinoe
            - tsuchinoto
    4:
      type: method
      default_method: nil
      method:
       - define: Junishi.by_angle(AngleValue.new.with_shi(1).revise)
         target:
          - tsuchinoe
          - tsuchinoto
      _?:
        type: method
        default_method: true
        method:
         - define: target == self.taikyoku_kijin_4
           target:
            - tsuchinoe
            - tsuchinoto
tenotsu_kijin:
  name: 天乙貴人
  _?:
    type: method
    default_method: tenotsu_kijin_1?(target.chishi) || tenotsu_kijin_2?(target.chishi)
  parts:
    1:
      type: angle
      method:
       -
         define: AngleValue.new.with_shi(1)
         target:
          - kinoe
          - tsuchinoe
          - kanoe
       -
         define: self.gogyo.angle_value.with_shi(6)
         target:
          - kinoto
          - hinoe
          - hinoto
          - kanoto
          - mizunoe
          - mizunoto
       -
         define: self.gogyo.angle_value.with_shi(3)
         target:
          - tsuchinoto
    2:
      type: angle
      default_method: self.tenotsu_kijin_1_angle.original.with_shi(4) * -1

tenkan_kijin:
  name: 天官貴人
  type: angle
  method:
   - define: AngleValue.new(15).with_shi(7 * gogyo.pos_x ** 2).with_shi(-2 * gogyo.pos_x).with_shi(1.5 * inyou)
     target:
      - kinoe
      - kinoto
      - kanoe
      - kanoto
   - define: AngleValue.new(15).with_shi(5 * gogyo.pos_y ** 2).with_shi(1.5 * gogyo.pos_y).with_shi(-2 * inyou)
     target:
      - hinoe
      - hinoto
      - mizunoe
      - mizunoto
   - define: AngleValue.new(15).with_shi(-2.5 * inyou)
     target:
      - tsuchinoe
      - tsuchinoto
tenhuku_kijin:
  name: 天福貴人
  type: angle
  default_method: (AngleValue.new(2 - self.code) % Jikkan::JIKKAN_COUNT).multi_shi(1)
  method:
   - define: AngleValue.new.with_shi(1)
     target:
      - mizunoto

anroku:
  name: 暗禄
  type: angle
  default_method: (self.kanroku_angle * -1).original

kanroku:
  name: 干禄
  type: angle
  default_method: Houn.by_key('kenroku').construct_junishi_with(self).angle_value.original

fukigakudo:
  name: 富貴学童
  type: angle
  default_method: Houn.by_key('chosei').construct_junishi_with(self).angle_value.original

tenchukijin:
  name: 天厨貴人
  type: angle
  default_method: Hentsusei.by_key('shokusin').construct_other_with(self).kanroku_angle.original

kinyoroku:
  name: 金輿禄
  type: angle
  default_method: self.kanroku_angle.with_shi(2).original

gakushi:
  name: 学士
  type: angle
  default_method: Hentsusei.by_key('inju').construct_other_with(self).kanroku_angle.original

kyoroku:
  name: 夾禄
  _?:
    type: method
    default_method: kyoroku_1?(target.chishi) && kyoroku_1?(target.chishi)
  parts:
    1:
      type: angle
      default_method: self.kanroku_angle.with_shi(-1).original
    2:
      type: angle
      default_method: self.kanroku_angle.with_shi(1).original
youjin:
  name: 羊刃
  type: angle
  default_method: self.kanroku_angle.with_shi(1).original

hijin:
  name: 飛刃
  type: angle
  default_method: self.youjin.chu_angle.original

kouen:
  name: 紅艶
  type: angle
  method:
   - define: AngleValue.new.with_shi(-1){ |angle| angle * (-5 * gogyo.pos_x ** 2 + gogyo.pos_x + 3 * gogyo.pos_y ** 2 - gogyo.pos_y - 4)}
     target:
      - kinoe
      - kanoe
      - tsuchinoe
      - hinoe
      - mizunoe
   - define: AngleValue.new.with_shi(0.5){ |angle| angle * (7 * gogyo.pos_x ** 2 - 3 * gogyo.pos_x + 7 * gogyo.pos_y ** 2 - gogyo.pos_y + 8)}
     target:
      - kinoto
      - kanoto
      - tsuchinoto
      - hinoto
      - mizunoto

ryuka:
  name: 流霞
  type: angle
  default_method: AngleValue.new.with_shi(0.5){|angle| angle * (15 - 4 * self.gogyo.code - self.inyou)}.mod_shi(10).with_shi(2)
  method:
   - define: AngleValue.new.with_shi(0.5){|angle| angle * (15 - 4 * self.gogyo.code + self.inyou)}.mod_shi(10).with_shi(2)
     target:
      - kanoe
      - kanoto

fukusei_kijin:
  name: 福星貴人
  type: angle
  method:
   - define: AngleValue.new.with_shi(2).with_shi(2 * (self.gogyo.reverse_code % 4))
     target:
      - kinoe
      - hinoe
      - tsuchinoe
      - kanoe
      - mizunoe
   - define: AngleValue.new.with_shi(1)
     target:
      - kinoto
      - mizunoto
   - define: AngleValue.new.with_shi(2){|angle| angle * self.gogyo.reverse_code}.with_shi(1)
     target:
      - hinoto
      - tsuchinoto
      - kanoto

bunsei_kijin:
  name: 文星貴人
  type: angle
  default_method: self.kanroku_angle.with_shi(3).original

setsudojin:
  name: 節度人
  type: angle
  method:
   - define: AngleValue.new.with_shi( 6 - self.inyou)
     target:
      - kinoe
      - kinoto
      - hinoe
      - hinoto
      - tsuchinoe
      - tsuchinoto
   - define: AngleValue.new.with_shi( -self.inyou)
     target:
      - kanoe
      - kanoto
      - mizunoe
      - mizunoto
tenzai:
  name: 天財
  type: method
  default_method: Hentsusei.by_key('henzai').construct_other_with(self)